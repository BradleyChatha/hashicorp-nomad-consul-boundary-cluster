AWS_REGION=$(curl http://169.254.169.254/2021-07-15/meta-data/placement/region)

while [ 1 ]
do
    if [ -f /is_boundary_server ]; then
        postgresCreds=$(aws secretsmanager get-secret-value --region "$AWS_REGION" --secret-id "{{ v_boundary_aws_rds_credentials_secret_name }}" --query "SecretString" --output text)
        if [ $? -ne 0 ]; then
            sleep 5;
            continue;
        fi

        postgresUrl="$(echo $postgresCreds | jq -r '.username')\\:$(echo $postgresCreds | jq -r '.password')\\@$(echo $postgresCreds | jq -r '.host')\\:$(echo $postgresCreds | jq -r '.port')\\/$(echo $postgresCreds | jq -r '.db')"
        sed -i "s/__replace_url/$postgresUrl/g" /etc/boundary.d/boundary.hcl
    else
        boundaryServers=$(aws ec2 describe-instances --filters "Name=tag:bchatha:cluster:boundary:role,Values=server" --region $AWS_REGION)
        if [ $? -ne 0 ]; then
            sleep 5;
            continue;
        fi

        serverIps=$(echo $boundaryServers | jq '.Reservations[].Instances[].PrivateIpAddress' | paste -sd "," -)
        if [ $? -ne 0 ]; then
            sleep 5;
            continue;
        fi

        sed -i "s/__replace_initial_upstreams/$serverIps/g" /etc/boundary.d/boundary.hcl
    fi

    break
done

sudo systemctl start boundary